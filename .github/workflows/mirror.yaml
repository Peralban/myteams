name: Chocolatine

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**f'

env:
  EXECUTABLES_1: myteams_server
  EXECUTABLES_2: myteams_cli
  MIRROR_URL: git@github.com:EpitechPromo2027/B-NWP-400-NAN-4-1-myteams-quentin.tennerel.git

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
      - name: start checker
        run : |
          check.sh $(pwd) $(pwd)
      - name: print
        run: |
          result=$(pwd)/coding-style-reports.log
          while read line; do
            ErrorType=$(cut -d ":" -f 3 <<< $line)
            ErrorCode=$(cut -d ":" -f 4 <<< $line)
            ErrorFile=$(cut -d ":" -f 1 <<< $line | sed 's/^.\{2\}//')
            ErrorLine=$(cut -d ":" -f 2 <<< $line)
            echo "::error title=$ErrorType coding style error: #$ErrorFile#L$ErrorLine:: $ErrorCode"
          done < $result
          if [ -s $result ];
          then
            exit 1
          fi

  check_program_compilation1:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
      - name: make verify
        run: make
      - name: make clean
        run: make clean
      - name: execute
        run: |
          if [ -x ${{ env.EXECUTABLES_1 }} ]; then
            echo "Executable file exists"
          else
            echo "Executable file does not exist"
            exit 1
          fi

  check_program_compilation2:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
      - name: make verify
        run: make
      - name: make clean
        run: make clean
      - name: execute
        run: |
          if [ -x ${{ env.EXECUTABLES_2 }} ]; then
            echo "Executable file exists"
          else
            echo "Executable file does not exist"
            exit 1
          fi

  Repository_Mirroring:
    runs-on: ubuntu-latest
    needs:
        - check_program_compilation1
        - check_program_compilation2
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}

  run_tests:
    runs-on: ubuntu-latest
    needs:
      - check_program_compilation1
      - check_program_compilation2
    container:  epitechcontent/epitest-docker
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
      - name: make test
        run: make tests_run